{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import{BottomNavigation,DefaultTheme,DarkTheme}from'react-native-paper';import MaterialCommunityIcons from\"@expo/vector-icons/MaterialCommunityIcons\";import{NavigationHelpersContext,TabActions,useTheme,useLinkBuilder,Link}from'@react-navigation/native';function MaterialBottomTabViewInner(_ref){var state=_ref.state,navigation=_ref.navigation,descriptors=_ref.descriptors,rest=_objectWithoutProperties(_ref,[\"state\",\"navigation\",\"descriptors\"]);var _useTheme=useTheme(),dark=_useTheme.dark,colors=_useTheme.colors;var buildLink=useLinkBuilder();var theme=React.useMemo(function(){var t=dark?DarkTheme:DefaultTheme;return _objectSpread(_objectSpread({},t),{},{colors:_objectSpread(_objectSpread(_objectSpread({},t.colors),colors),{},{surface:colors.card})});},[colors,dark]);return React.createElement(BottomNavigation,_extends({},rest,{theme:theme,navigationState:state,onIndexChange:function onIndexChange(index){return navigation.dispatch(_objectSpread(_objectSpread({},TabActions.jumpTo(state.routes[index].name)),{},{target:state.key}));},renderScene:function renderScene(_ref3){var route=_ref3.route;return descriptors[route.key].render();},renderTouchable:Platform.OS==='web'?function(_ref2){var _onPress=_ref2.onPress,route=_ref2.route,_0=_ref2.accessibilityRole,_1=_ref2.borderless,_2=_ref2.centered,_3=_ref2.rippleColor,style=_ref2.style,rest=_objectWithoutProperties(_ref2,[\"onPress\",\"route\",\"accessibilityRole\",\"borderless\",\"centered\",\"rippleColor\",\"style\"]);return React.createElement(Link,_extends({},rest,{to:buildLink(route.name,route.params),accessibilityRole:\"link\",onPress:function onPress(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&(e.button==null||e.button===0)){e.preventDefault();_onPress===null||_onPress===void 0?void 0:_onPress(e);}},style:[styles.touchable,style]}));}:undefined,renderIcon:function renderIcon(_ref4){var route=_ref4.route,focused=_ref4.focused,color=_ref4.color;var options=descriptors[route.key].options;if(typeof options.tabBarIcon==='string'){return React.createElement(MaterialCommunityIcons,{name:options.tabBarIcon,color:color,size:24,style:styles.icon});}if(typeof options.tabBarIcon==='function'){return options.tabBarIcon({focused:focused,color:color});}return null;},getLabelText:function getLabelText(_ref5){var route=_ref5.route;var options=descriptors[route.key].options;return options.tabBarLabel!==undefined?options.tabBarLabel:options.title!==undefined?options.title:route.name;},getColor:function getColor(_ref6){var route=_ref6.route;return descriptors[route.key].options.tabBarColor;},getBadge:function getBadge(_ref7){var route=_ref7.route;return descriptors[route.key].options.tabBarBadge;},getAccessibilityLabel:function getAccessibilityLabel(_ref8){var route=_ref8.route;return descriptors[route.key].options.tabBarAccessibilityLabel;},getTestID:function getTestID(_ref9){var route=_ref9.route;return descriptors[route.key].options.tabBarTestID;},onTabPress:function onTabPress(_ref10){var route=_ref10.route,preventDefault=_ref10.preventDefault;var event=navigation.emit({type:'tabPress',target:route.key,canPreventDefault:true});if(event.defaultPrevented){preventDefault();}}}));}export default function MaterialBottomTabView(props){return React.createElement(NavigationHelpersContext.Provider,{value:props.navigation},React.createElement(MaterialBottomTabViewInner,props));}var styles=StyleSheet.create({icon:{backgroundColor:'transparent'},touchable:{display:'flex',justifyContent:'center'}});","map":{"version":3,"sources":["MaterialBottomTabView.tsx"],"names":["descriptors","rest","colors","useTheme","buildLink","useLinkBuilder","theme","t","dark","surface","card","index","TabActions","state","target","key","route","onPress","accessibilityRole","borderless","centered","rippleColor","style","e","styles","color","options","icon","focused","preventDefault","event","type","canPreventDefault","props","navigation","backgroundColor","touchable","display","justifyContent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Platform } from 'react-native';\nimport { BottomNavigation, DefaultTheme, DarkTheme } from 'react-native-paper';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport {\n  NavigationHelpersContext,\n  Route,\n  TabNavigationState,\n  TabActions,\n  useTheme,\n  useLinkBuilder,\n  Link,\n} from '@react-navigation/native';\n\nimport type {\n  MaterialBottomTabDescriptorMap,\n  MaterialBottomTabNavigationConfig,\n  MaterialBottomTabNavigationHelpers,\n} from '../types';\n\ntype Props = MaterialBottomTabNavigationConfig & {\n  state: TabNavigationState;\n  navigation: MaterialBottomTabNavigationHelpers;\n  descriptors: MaterialBottomTabDescriptorMap;\n};\n\ntype Scene = { route: { key: string } };\n\nfunction MaterialBottomTabViewInner({\n  state,\n  navigation,\n  descriptors,\n  ...rest\n}: Props) {\n  const { dark, colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const theme = React.useMemo(() => {\n    const t = dark ? DarkTheme : DefaultTheme;\n\n    return {\n      ...t,\n      colors: {\n        ...t.colors,\n        ...colors,\n        surface: colors.card,\n      },\n    };\n  }, [colors, dark]);\n\n  return (\n    <BottomNavigation\n      {...rest}\n      theme={theme}\n      navigationState={state}\n      onIndexChange={(index: number) =>\n        navigation.dispatch({\n          ...TabActions.jumpTo(state.routes[index].name),\n          target: state.key,\n        })\n      }\n      renderScene={({ route }) => descriptors[route.key].render()}\n      renderTouchable={\n        Platform.OS === 'web'\n          ? ({\n              onPress,\n              route,\n              accessibilityRole: _0,\n              borderless: _1,\n              centered: _2,\n              rippleColor: _3,\n              style,\n              ...rest\n            }) => {\n              return (\n                <Link\n                  {...rest}\n                  // @ts-expect-error: to could be undefined, but it doesn't affect functionality\n                  to={buildLink(route.name, route.params)}\n                  accessibilityRole=\"link\"\n                  onPress={(e: any) => {\n                    if (\n                      !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n                      (e.button == null || e.button === 0) // ignore everything but left clicks\n                    ) {\n                      e.preventDefault();\n                      onPress?.(e);\n                    }\n                  }}\n                  style={[styles.touchable, style]}\n                />\n              );\n            }\n          : undefined\n      }\n      renderIcon={({ route, focused, color }) => {\n        const { options } = descriptors[route.key];\n\n        if (typeof options.tabBarIcon === 'string') {\n          return (\n            <MaterialCommunityIcons\n              name={options.tabBarIcon}\n              color={color}\n              size={24}\n              style={styles.icon}\n            />\n          );\n        }\n\n        if (typeof options.tabBarIcon === 'function') {\n          return options.tabBarIcon({ focused, color });\n        }\n\n        return null;\n      }}\n      getLabelText={({ route }: Scene) => {\n        const { options } = descriptors[route.key];\n\n        return options.tabBarLabel !== undefined\n          ? options.tabBarLabel\n          : options.title !== undefined\n          ? options.title\n          : (route as Route<string>).name;\n      }}\n      getColor={({ route }) => descriptors[route.key].options.tabBarColor}\n      getBadge={({ route }) => descriptors[route.key].options.tabBarBadge}\n      getAccessibilityLabel={({ route }) =>\n        descriptors[route.key].options.tabBarAccessibilityLabel\n      }\n      getTestID={({ route }) => descriptors[route.key].options.tabBarTestID}\n      onTabPress={({ route, preventDefault }) => {\n        const event = navigation.emit({\n          type: 'tabPress',\n          target: route.key,\n          canPreventDefault: true,\n        });\n\n        if (event.defaultPrevented) {\n          preventDefault();\n        }\n      }}\n    />\n  );\n}\n\nexport default function MaterialBottomTabView(props: Props) {\n  return (\n    <NavigationHelpersContext.Provider value={props.navigation}>\n      <MaterialBottomTabViewInner {...props} />\n    </NavigationHelpersContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n  touchable: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}