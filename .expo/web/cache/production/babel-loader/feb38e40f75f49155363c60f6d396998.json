{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import*as Font from'expo-font';import{AppLoading}from'expo';import{createStackNavigator}from'@react-navigation/stack';import{createDrawerNavigator}from'@react-navigation/drawer';import'react-native-gesture-handler';import{NavigationContainer}from'@react-navigation/native';import Home from\"./screens/home\";import Slangs from\"./screens/slangs\";import Phrases from\"./screens/phrases\";import Detail from\"./screens/detail\";import{createMaterialBottomTabNavigator}from'@react-navigation/material-bottom-tabs';import MaterialCommunityIcons from\"@expo/vector-icons/MaterialCommunityIcons\";var Drawer=createDrawerNavigator();var Stack=createStackNavigator();var BottomTab=createMaterialBottomTabNavigator();var HomeStack=function HomeStack(){return React.createElement(Stack.Navigator,null,React.createElement(Stack.Screen,{name:\"Home\",component:Home}),React.createElement(Stack.Screen,{name:\"Slangs\",component:Slangs}),React.createElement(Stack.Screen,{name:\"Phrases\",component:Phrases}),React.createElement(Stack.Screen,{name:\"Detail\",component:Detail}));};var BottomnNav=function BottomnNav(){return React.createElement(BottomTab.Navigator,{initialRouteName:\"Home\",activeColor:\"#e91e63\",style:{backgroundColor:'tomato'}},React.createElement(BottomTab.Screen,{name:\"Home\",component:HomeStack,options:{tabBarLabel:'Home',tabBarIcon:function tabBarIcon(_ref){var color=_ref.color;return React.createElement(MaterialCommunityIcons,{name:\"home\",color:color,size:26});}}}),React.createElement(BottomTab.Screen,{name:\"Notifications\",component:Notifications,options:{tabBarLabel:'Updates',tabBarIcon:function tabBarIcon(_ref2){var color=_ref2.color;return React.createElement(MaterialCommunityIcons,{name:\"bell\",color:color,size:26});}}}));};var getFonts=function getFonts(){return Font.loadAsync({'Roboto-regular':require(\"./assets/fonts/Roboto-Regular.ttf\"),'Roboto-medium':require(\"./assets/fonts/Roboto-Medium.ttf\"),'Roboto-bold':require(\"./assets/fonts/Roboto-Bold.ttf\")});};export default function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),fontsLoaded=_useState2[0],setFontsLoaded=_useState2[1];if(fontsLoaded){return React.createElement(NavigationContainer,null,React.createElement(BottomTab.Navigator,{initialRouteName:\"Home\",activeColor:\"#e91e63\",style:{backgroundColor:'tomato'}},React.createElement(BottomTab.Screen,{name:\"Home\",component:HomeStack,options:{tabBarLabel:'Home',tabBarIcon:function tabBarIcon(_ref3){var color=_ref3.color;return React.createElement(MaterialCommunityIcons,{name:\"home\",color:color,size:26});}}})));}else{return React.createElement(AppLoading,{startAsync:getFonts,onFinish:function onFinish(){return setFontsLoaded(true);}});}}","map":{"version":3,"sources":["H:/GitHub/HIT238_AustralianEnglish_Phase2(local)/myproject/App.js"],"names":["React","useState","Font","AppLoading","createStackNavigator","createDrawerNavigator","NavigationContainer","Home","Slangs","Phrases","Detail","createMaterialBottomTabNavigator","MaterialCommunityIcons","Drawer","Stack","BottomTab","HomeStack","BottomnNav","backgroundColor","tabBarLabel","tabBarIcon","color","Notifications","getFonts","loadAsync","require","App","fontsLoaded","setFontsLoaded"],"mappings":"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","sourcesContent":["  \nimport React, {useState} from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Home from './screens/home';\nimport Slangs from './screens/slangs';\nimport Phrases from './screens/phrases';\nimport Detail from './screens/detail';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\n\nconst Drawer = createDrawerNavigator();\nconst Stack = createStackNavigator();\nconst BottomTab = createMaterialBottomTabNavigator();\n\nconst HomeStack = () => {\n  return(\n\n      <Stack.Navigator >\n       <Stack.Screen name=\"Home\" component={Home}/>\n       <Stack.Screen name=\"Slangs\" component={Slangs}/>\n       <Stack.Screen name=\"Phrases\" component={Phrases}/>\n       <Stack.Screen name=\"Detail\" component={Detail}/>\n     </Stack.Navigator>\n\n  );\n\n}\n     \nconst BottomnNav = () => {\n\n    return (\n      <BottomTab.Navigator\n        initialRouteName=\"Home\"\n        activeColor=\"#e91e63\"\n        style={{ backgroundColor: 'tomato' }}\n      >\n        <BottomTab.Screen\n          name=\"Home\"\n          component={HomeStack}\n          options={{\n            tabBarLabel: 'Home',\n            tabBarIcon: ({ color }) => (\n              <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n            ),\n          }}\n        />\n        <BottomTab.Screen\n          name=\"Notifications\"\n          component={Notifications}\n          options={{\n            tabBarLabel: 'Updates',\n            tabBarIcon: ({ color }) => (\n              <MaterialCommunityIcons name=\"bell\" color={color} size={26} />\n            ),\n          }}\n        />\n        \n      </BottomTab.Navigator>\n    );\n\n  \n\n}\n \n\nconst getFonts = () => {\n  return Font.loadAsync(\n    {\n      'Roboto-regular': require('./assets/fonts/Roboto-Regular.ttf'),\n      'Roboto-medium': require('./assets/fonts/Roboto-Medium.ttf'),\n      'Roboto-bold': require('./assets/fonts/Roboto-Bold.ttf'),\n    }\n  );\n}\n\n\n\n\n\n\n\n\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  // make sure font is loaded before rendering home screen\n  if (fontsLoaded) {\n    return (\n\n    <NavigationContainer>\n      <BottomTab.Navigator\n        initialRouteName=\"Home\"\n        activeColor=\"#e91e63\"\n        style={{ backgroundColor: 'tomato' }}\n      >\n        <BottomTab.Screen\n          name=\"Home\"\n          component={HomeStack}\n          options={{\n            tabBarLabel: 'Home',\n            tabBarIcon: ({ color }) => (\n              <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n            ),\n          }}\n        />\n        \n        \n      </BottomTab.Navigator>\n    </NavigationContainer>\n      // returns the screen in the stack\n      \n    );\n  } else {\n    return (\n      <AppLoading \n        startAsync={getFonts} \n        onFinish={() => setFontsLoaded(true)} \n      />\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}