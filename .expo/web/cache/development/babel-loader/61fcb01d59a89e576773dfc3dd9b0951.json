{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"H:\\\\GitHub\\\\HIT238_AustralianEnglish_Phase2(local)\\\\myproject\\\\App.js\";\nimport React, { useState } from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Home from \"./screens/home\";\nimport Slangs from \"./screens/slangs\";\nimport Phrases from \"./screens/phrases\";\nimport Detail from \"./screens/detail\";\nvar Drawer = createDrawerNavigator();\nvar Stack = createStackNavigator();\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    'Roboto-regular': require(\"./assets/fonts/Roboto-Regular.ttf\"),\n    'Roboto-medium': require(\"./assets/fonts/Roboto-Medium.ttf\"),\n    'Roboto-bold': require(\"./assets/fonts/Roboto-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  createHomeStack = function createHomeStack() {\n    return React.createElement(Stack.Navigator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Home\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Slangs\",\n      component: Slangs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 8\n      }\n    }));\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  if (fontsLoaded) {\n    return React.createElement(NavigationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, React.createElement(Drawer.Navigator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, React.createElement(Drawer.Screen, {\n      name: \"Home\",\n      children: createHomeStack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    })));\n  } else {\n    return React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontsLoaded(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    });\n  }\n}","map":{"version":3,"sources":["H:/GitHub/HIT238_AustralianEnglish_Phase2(local)/myproject/App.js"],"names":["React","useState","Font","AppLoading","createStackNavigator","createDrawerNavigator","NavigationContainer","Home","Slangs","Phrases","Detail","Drawer","Stack","getFonts","loadAsync","require","App","createHomeStack","fontsLoaded","setFontsLoaded"],"mappings":";;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,OAAO,8BAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AAEA,IAAMC,MAAM,GAAGN,qBAAqB,EAApC;AACA,IAAMO,KAAK,GAAGR,oBAAoB,EAAlC;;AAMA,IAAMS,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,SAAOX,IAAI,CAACY,SAAL,CACL;AACE,sBAAkBC,OAAO,qCAD3B;AAEE,qBAAiBA,OAAO,oCAF1B;AAGE,mBAAeA,OAAO;AAHxB,GADK,CAAP;AAOD,CARD;;AAkBA,eAAe,SAASC,GAAT,GAAe;AAG5BC,EAAAA,eAAe,GAAG;AAAA,WACf,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,SAAS,EAAEV,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,SAAS,EAAEC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADe;AAAA,GAAlB;;AAH4B,kBAQUP,QAAQ,CAAC,KAAD,CARlB;AAAA;AAAA,MAQrBiB,WARqB;AAAA,MAQRC,cARQ;;AAW5B,MAAID,WAAJ,EAAiB;AACf,WAEA,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,IAAI,EAAC,MAApB;AAA2B,MAAA,QAAQ,EAAED,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAFA;AAUD,GAXD,MAWO;AACL,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEJ,QADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMM,cAAc,CAAC,IAAD,CAApB;AAAA,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;AAEF","sourcesContent":["  \nimport React, {useState} from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Home from './screens/home';\nimport Slangs from './screens/slangs';\nimport Phrases from './screens/phrases';\nimport Detail from './screens/detail';\n\nconst Drawer = createDrawerNavigator();\nconst Stack = createStackNavigator();\n\n \n   \n \n\nconst getFonts = () => {\n  return Font.loadAsync(\n    {\n      'Roboto-regular': require('./assets/fonts/Roboto-Regular.ttf'),\n      'Roboto-medium': require('./assets/fonts/Roboto-Medium.ttf'),\n      'Roboto-bold': require('./assets/fonts/Roboto-Bold.ttf'),\n    }\n  );\n}\n\n\n\n\n\n\n\n\n\nexport default function App() {\n\n\n  createHomeStack = () => \n     <Stack.Navigator>\n       <Stack.Screen name=\"Home\" component={Home}/>\n       <Stack.Screen name=\"Slangs\" component={Slangs}/>\n     </Stack.Navigator>\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  // make sure font is loaded before rendering home screen\n  if (fontsLoaded) {\n    return (\n\n    <NavigationContainer>\n      <Drawer.Navigator>\n        <Drawer.Screen name=\"Home\" children={createHomeStack}/>\n      </Drawer.Navigator>\n    </NavigationContainer>\n      // returns the screen in the stack\n      \n    );\n  } else {\n    return (\n      <AppLoading \n        startAsync={getFonts} \n        onFinish={() => setFontsLoaded(true)} \n      />\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}