{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"H:\\\\GitHub\\\\HIT238_AustralianEnglish_Phase2(local)\\\\myproject\\\\App.js\";\nimport React, { useState } from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport Navigator from \"./routes/homeStack\";\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Home from \"../screens/home\";\nimport Slangs from \"../screens/slangs\";\nimport Phrases from \"../screens/phrases\";\nimport Detail from \"../screens/detail\";\nvar Stack = createStackNavigator();\n\nfunction HomeStack() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      gestureEnabled: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 6\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      title: 'My app'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 8\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Slangs\",\n    component: Slangs,\n    initialParams: {\n      user: 'me'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 8\n    }\n  }));\n}\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    'Roboto-regular': require(\"./assets/fonts/Roboto-Regular.ttf\"),\n    'Roboto-medium': require(\"./assets/fonts/Roboto-Medium.ttf\"),\n    'Roboto-bold': require(\"./assets/fonts/Roboto-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  if (fontsLoaded) {\n    return React.createElement(NavigationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, this.createHomeStack());\n  } else {\n    return React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontsLoaded(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    });\n  }\n}","map":{"version":3,"sources":["H:/GitHub/HIT238_AustralianEnglish_Phase2(local)/myproject/App.js"],"names":["React","useState","Font","AppLoading","Navigator","NavigationContainer","Home","Slangs","Phrases","Detail","Stack","createStackNavigator","HomeStack","gestureEnabled","title","user","getFonts","loadAsync","require","App","fontsLoaded","setFontsLoaded","createHomeStack"],"mappings":";;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,SAAP;AACA,OAAO,8BAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AAGA,IAAMC,KAAK,GAAGC,oBAAoB,EAAlC;;AAEC,SAASC,SAAT,GAAqB;AACnB,SACE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,gBAAgB,EAAC,MADnB;AAEE,IAAA,aAAa,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAEP,IAFb;AAGE,IAAA,OAAO,EAAE;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAEP,MAFb;AAGE,IAAA,aAAa,EAAE;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAiBD;;AAEF,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,SAAOd,IAAI,CAACe,SAAL,CACL;AACE,sBAAkBC,OAAO,qCAD3B;AAEE,qBAAiBA,OAAO,oCAF1B;AAGE,mBAAeA,OAAO;AAHxB,GADK,CAAP;AAOD,CARD;;AAWA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACUlB,QAAQ,CAAC,KAAD,CADlB;AAAA;AAAA,MACrBmB,WADqB;AAAA,MACRC,cADQ;;AAI5B,MAAID,WAAJ,EAAiB;AACf,WAEA,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKE,eAAL,EADD,CAFA;AAQD,GATD,MASO;AACL,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEN,QADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMK,cAAc,CAAC,IAAD,CAApB;AAAA,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;AAEF","sourcesContent":["  \nimport React, {useState} from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport Navigator from './routes/homeStack';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Home from '../screens/home';\nimport Slangs from '../screens/slangs';\nimport Phrases from '../screens/phrases';\nimport Detail from '../screens/detail';\n\n\nconst Stack = createStackNavigator();\n\n function HomeStack() {\n   return (\n     <Stack.Navigator\n       initialRouteName=\"Home\"\n       screenOptions={{ gestureEnabled: false }}\n     >\n       <Stack.Screen\n         name=\"Home\"\n         component={Home}\n         options={{ title: 'My app' }}\n       />\n       <Stack.Screen\n         name=\"Slangs\"\n         component={Slangs}\n         initialParams={{ user: 'me' }}\n       />\n     </Stack.Navigator>\n   );\n }\n\nconst getFonts = () => {\n  return Font.loadAsync(\n    {\n      'Roboto-regular': require('./assets/fonts/Roboto-Regular.ttf'),\n      'Roboto-medium': require('./assets/fonts/Roboto-Medium.ttf'),\n      'Roboto-bold': require('./assets/fonts/Roboto-Bold.ttf'),\n    }\n  );\n}\n\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  // make sure font is loaded before rendering home screen\n  if (fontsLoaded) {\n    return (\n\n    <NavigationContainer>\n    {this.createHomeStack()}\n    </NavigationContainer>\n      // returns the screen in the stack\n      \n    );\n  } else {\n    return (\n      <AppLoading \n        startAsync={getFonts} \n        onFinish={() => setFontsLoaded(true)} \n      />\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}