{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"H:\\\\GitHub\\\\HIT238_AustralianEnglish_Phase2(local)\\\\myproject\\\\App.js\";\nimport React, { useState } from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Home from \"./screens/home\";\nimport Slangs from \"./screens/slangs\";\nimport Phrases from \"./screens/phrases\";\nimport Detail from \"./screens/detail\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nvar Drawer = createDrawerNavigator();\nvar Stack = createStackNavigator();\nvar BottomTab = createMaterialBottomTabNavigator();\n\nvar HomeStack = function HomeStack() {\n  return React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Slangs\",\n    component: Slangs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Phrases\",\n    component: Phrases,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Detail\",\n    component: Detail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 8\n    }\n  }));\n};\n\nvar BottomNav = function BottomNav() {\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: \"Home\",\n    activeColor: \"#e91e63\",\n    style: {\n      backgroundColor: 'tomato'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Home\",\n    component: HomeStack,\n    options: {\n      tabBarLabel: 'Home',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"home\",\n          color: color,\n          size: 26,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Notifications\",\n    component: Notifications,\n    options: {\n      tabBarLabel: 'Updates',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"bell\",\n          color: color,\n          size: 26,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    'Roboto-regular': require(\"./assets/fonts/Roboto-Regular.ttf\"),\n    'Roboto-medium': require(\"./assets/fonts/Roboto-Medium.ttf\"),\n    'Roboto-bold': require(\"./assets/fonts/Roboto-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  if (fontsLoaded) {\n    return React.createElement(NavigationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }, \"this.HomeStack();\");\n  } else {\n    return React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontsLoaded(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    });\n  }\n}","map":{"version":3,"sources":["H:/GitHub/HIT238_AustralianEnglish_Phase2(local)/myproject/App.js"],"names":["React","useState","Font","AppLoading","createStackNavigator","createDrawerNavigator","NavigationContainer","Home","Slangs","Phrases","Detail","createMaterialBottomTabNavigator","MaterialCommunityIcons","Drawer","Stack","BottomTab","HomeStack","BottomNav","backgroundColor","tabBarLabel","tabBarIcon","color","Notifications","getFonts","loadAsync","require","App","fontsLoaded","setFontsLoaded"],"mappings":"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","sourcesContent":["  \nimport React, {useState} from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Home from './screens/home';\nimport Slangs from './screens/slangs';\nimport Phrases from './screens/phrases';\nimport Detail from './screens/detail';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\n\nconst Drawer = createDrawerNavigator();\nconst Stack = createStackNavigator();\nconst BottomTab = createMaterialBottomTabNavigator();\n\nconst HomeStack = () => {\n  return(\n\n      <Stack.Navigator >\n       <Stack.Screen name=\"Home\" component={Home}/>\n       <Stack.Screen name=\"Slangs\" component={Slangs}/>\n       <Stack.Screen name=\"Phrases\" component={Phrases}/>\n       <Stack.Screen name=\"Detail\" component={Detail}/>\n     </Stack.Navigator>\n\n  );\n\n}\n     \nconst BottomNav = () => {\n\n    return (\n      <BottomTab.Navigator\n        initialRouteName=\"Home\"\n        activeColor=\"#e91e63\"\n        style={{ backgroundColor: 'tomato' }}\n      >\n        <BottomTab.Screen\n          name=\"Home\"\n          component={HomeStack}\n          options={{\n            tabBarLabel: 'Home',\n            tabBarIcon: ({ color }) => (\n              <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n            ),\n          }}\n        />\n        <BottomTab.Screen\n          name=\"Notifications\"\n          component={Notifications}\n          options={{\n            tabBarLabel: 'Updates',\n            tabBarIcon: ({ color }) => (\n              <MaterialCommunityIcons name=\"bell\" color={color} size={26} />\n            ),\n          }}\n        />\n        \n      </BottomTab.Navigator>\n    );\n\n  \n\n}\n \n\nconst getFonts = () => {\n  return Font.loadAsync(\n    {\n      'Roboto-regular': require('./assets/fonts/Roboto-Regular.ttf'),\n      'Roboto-medium': require('./assets/fonts/Roboto-Medium.ttf'),\n      'Roboto-bold': require('./assets/fonts/Roboto-Bold.ttf'),\n    }\n  );\n}\n\n\n\n\n\n\n\n\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  // make sure font is loaded before rendering home screen\n  if (fontsLoaded) {\n    return (\n\n    <NavigationContainer>\n      this.HomeStack();\n    </NavigationContainer>\n      // returns the screen in the stack\n      \n    );\n  } else {\n    return (\n      <AppLoading \n        startAsync={getFonts} \n        onFinish={() => setFontsLoaded(true)} \n      />\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}