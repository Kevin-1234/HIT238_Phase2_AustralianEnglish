{"version":3,"sources":["styles/global.js","screens/home.js","screens/slangs.js","screens/phrases.js","screens/detail.js","App.js","web-build/register-service-worker.js","assets/fonts/Roboto-Regular.ttf","assets/fonts/Roboto-Medium.ttf","assets/fonts/Roboto-Bold.ttf"],"names":["globalStyles","StyleSheet","create","container","flex","padding","titleText","fontFamily","fontSize","Home","navigation","View","style","Text","Button","title","onPress","push","Slangs","useState","key","definition","imageS","imageL","audio","FlatList","data","renderItem","item","TouchableOpacity","navigate","styles","Detail","route","params","Stack","createDrawerNavigator","createStackNavigator","BottomTab","createMaterialBottomTabNavigator","HomeStack","Navigator","Screen","name","component","Phrases","getFonts","Font","require","App","fontsLoaded","setFontsLoaded","NavigationContainer","initialRouteName","activeColor","backgroundColor","options","tabBarLabel","tabBarIcon","color","MaterialCommunityIcons","size","AppLoading","startAsync","onFinish","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"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","file":"static/js/app.ac0fd66a.chunk.js","sourcesContent":["import {StyleSheet} from 'react-native';\r\n\r\n\r\nexport const globalStyles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      padding: 24,\r\n    },\r\n  \r\n    titleText:{\r\n      fontFamily: 'Roboto-bold',\r\n      fontSize: 38, \r\n  \r\n    }\r\n  });","import React from 'react';\r\nimport { StyleSheet, View, Text, Button } from 'react-native';\r\nimport {globalStyles} from '../styles/global';\r\n\r\nexport default function Home({navigation}) {\r\n\r\nconst pressHandler = () => {\r\n    //navigation.navigate('Slangs');\r\n    navigation.push('Slangs');\r\n  }\r\n\r\n  return (\r\n    <View style={globalStyles.container}>\r\n      <Text style={globalStyles.titleText}>Home Screen</Text>\r\n      <Button title='go to slangs' onPress={pressHandler}/>\r\n    </View>\r\n  );\r\n}\r\n","import React, {useState}from 'react';\r\nimport { StyleSheet, View, Text, FlatList, TouchableOpacity } from 'react-native';\r\nimport {globalStyles} from '../styles/global';\r\n\r\n\r\nexport default function Slangs({navigation}) {\r\n const [Slangs, setSlangs] = useState([\r\n    {\r\n        title: \"Mash\",\r\n        key: '1',\r\n        definition: \"Potatoes that have been boiled and crushed into a soft mass, often with butter and milk.\",\r\n        imageS: \"assets/images/sb_mash.png\",\r\n        imageL: \"assets/images/l_mash.png\",\r\n        audio: \"assets/audios/mash.mp3\"\r\n    },\r\n    {\r\n        title: \"Dead Horse\",\r\n        key: '2',\r\n        definition: \"It means tomato sauce, which is any of a very large number of sauces made primarily from tomatoes.\",\r\n        imageS: \"assets/images/sb_deadhorse.png\",\r\n        imageL: \"assets/images/l_deadhorse.png\",\r\n        audio: \"assets/audios/deadhorse.mp3\"\r\n    },\r\n    {\r\n        title: \"Banger\",\r\n        key: '3',\r\n        definition: \"Sausage\",\r\n        imageS: \"assets/images/sb_banger.png\",\r\n        imageL: \"assets/images/l_banger.png\",\r\n        audio: \"assets/audios/banger.mp3\"\r\n    },\r\n    {\r\n        title: \"Avo\",\r\n        key: '4',\r\n        definition: \"A tropical fruit with hard, dark green skin, soft, light green flesh and a large seed inside.\",\r\n        imageS: \"assets/images/sb_avo.png\",\r\n        imageL: \"assets/images/l_avo.png\",\r\n        audio: \"assets/audios/avo.mp3\"\r\n    },\r\n    {\r\n        title: \"Dog Eye\",\r\n        key: '5',\r\n        definition: \"Dog's eye is a pie with a filling of meat and/or other savory ingredients.\",\r\n        imageS: \"assets/images/sb_dogeye.png\",\r\n        imageL: \"assets/images/l_dogeye.png\",\r\n        audio: \"assets/audios/dogeye.mp3\"\r\n    },\r\n    {\r\n        title: \"Flat White\",\r\n        key: '6',\r\n        definition: \"Coffee with milk or cream.\",\r\n        imageS: \"assets/images/sb_flatwhite.png\",\r\n        imageL: \"assets/images/l_flatwhite.png\",\r\n        audio: \"assets/audios/flatwhite.mp3\"\r\n    },\r\n\r\n  ]);   \r\n\r\n  return (\r\n    <View style={globalStyles.container}>\r\n        {/* each item in 'data' is cycled through*/}\r\n      <FlatList data={Slangs} renderItem={({ item }) => (\r\n        <TouchableOpacity onPress={() => navigation.navigate('Detail', item)}>\r\n          <Text style={globalStyles.titleText}>{ item.title }</Text>\r\n        </TouchableOpacity>\r\n      )} />\r\n    </View>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { StyleSheet, View, Text } from 'react-native';\r\nimport {globalStyles} from '../styles/global';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>phrase Screen</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 24,\r\n  },\r\n});","import { BaseRouter } from '@react-navigation/native';\r\nimport React from 'react';\r\nimport { StyleSheet, View, Text } from 'react-native';\r\nimport {globalStyles} from '../styles/global';\r\n\r\nexport default function Detail({route, navigation}) {\r\n\r\n/*<Text style={globalStyles.titleText}>{navigation.getParam('title', 'defultValue')}</Text>\r\n      <Text style={globalStyles.titleText}>{navigation.getParam('audio', 'defultValue')}</Text>\r\n      <Text style={globalStyles.titleText}>{navigation.getParam('definition', 'defultValue')}</Text>*/\r\n  return (\r\n    <View style={globalStyles.container}>\r\n      <Text style={globalStyles.titleText}>{route.params.title}</Text>\r\n      <Text style={globalStyles.titleText}>{route.params.audio}</Text>\r\n      <Text style={globalStyles.titleText}>{route.params.definition}</Text>\r\n      \r\n      \r\n\r\n    </View>\r\n  );\r\n}\r\n\r\n","  \nimport React, {useState} from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Home from './screens/home';\nimport Slangs from './screens/slangs';\nimport Phrases from './screens/phrases';\nimport Detail from './screens/detail';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\n\nconst Drawer = createDrawerNavigator();\nconst Stack = createStackNavigator();\nconst BottomTab = createMaterialBottomTabNavigator();\n\nconst HomeStack = () => {\n  return(\n\n      <Stack.Navigator >\n       <Stack.Screen name=\"Home\" component={Home}/>\n       <Stack.Screen name=\"Slangs\" component={Slangs}/>\n       <Stack.Screen name=\"Phrases\" component={Phrases}/>\n       <Stack.Screen name=\"Detail\" component={Detail}/>\n     </Stack.Navigator>\n\n  );\n\n}\n     \nconst BottomnNav = () => {\n\n    return (\n      <BottomTab.Navigator\n        initialRouteName=\"Home\"\n        activeColor=\"#e91e63\"\n        style={{ backgroundColor: 'tomato' }}\n      >\n        <BottomTab.Screen\n          name=\"Home\"\n          component={HomeStack}\n          options={{\n            tabBarLabel: 'Home',\n            tabBarIcon: ({ color }) => (\n              <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n            ),\n          }}\n        />\n        <BottomTab.Screen\n          name=\"Notifications\"\n          component={Notifications}\n          options={{\n            tabBarLabel: 'Updates',\n            tabBarIcon: ({ color }) => (\n              <MaterialCommunityIcons name=\"bell\" color={color} size={26} />\n            ),\n          }}\n        />\n        \n      </BottomTab.Navigator>\n    );\n\n  \n\n}\n \n\nconst getFonts = () => {\n  return Font.loadAsync(\n    {\n      'Roboto-regular': require('./assets/fonts/Roboto-Regular.ttf'),\n      'Roboto-medium': require('./assets/fonts/Roboto-Medium.ttf'),\n      'Roboto-bold': require('./assets/fonts/Roboto-Bold.ttf'),\n    }\n  );\n}\n\n\n\n\n\n\n\n\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  // make sure font is loaded before rendering home screen\n  if (fontsLoaded) {\n    return (\n\n    <NavigationContainer>\n      <BottomTab.Navigator\n        initialRouteName=\"Home\"\n        activeColor=\"#e91e63\"\n        style={{ backgroundColor: 'tomato' }}\n      >\n        <BottomTab.Screen\n          name=\"Home\"\n          component={HomeStack}\n          options={{\n            tabBarLabel: 'Home',\n            tabBarIcon: ({ color }) => (\n              <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n            ),\n          }}\n        />\n        \n        \n      </BottomTab.Navigator>\n    </NavigationContainer>\n      // returns the screen in the stack\n      \n    );\n  } else {\n    return (\n      <AppLoading \n        startAsync={getFonts} \n        onFinish={() => setFontsLoaded(true)} \n      />\n    )\n  }\n\n}","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/HIT238_AustralianEnglish_Phase2/expo-service-worker.js', { scope: '/HIT238_AustralianEnglish_Phase2/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Medium.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Bold.ttf\";"],"sourceRoot":""}